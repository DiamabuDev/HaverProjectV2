@model HaverDevProject.Models.NcrQa

<style>
    /* Popup Image Container */
    #popupImageContainer {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.9);
    }

    /* Popup Image */
    #popupImage {
        margin: auto;
        display: block;
        max-width: 90%;
        max-height: 90%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    /* Close Button */
    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }

        .close:hover,
        .close:focus {
            color: #999;
            text-decoration: none;
            cursor: pointer;
        }

    .zoomable-image {
        cursor: zoom-in;
    }
</style>

@{
    ViewData["Title"] = "Non Conforming Report Details";
}
        
            <button class="btn custom-header-bg icon-drop text-start mb-0" type="button" data-bs-toggle="collapse" data-bs-target="#qualityRepSection" aria-expanded="@ViewBag.IsNCRQaView.ToString().ToLower()" aria-controls="qualityRepSection">
                Quality Representative <i class="bi bi-chevron-down"></i>
            </button>
            <div class="collapse @(ViewBag.IsNCRQaView? "show" : "")" id="qualityRepSection">
                <div class="card">
                    <div class="card-body pb-0 pt-0">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="four-cols">Process Applicable</th>
                                    <th class="four-cols">Supplier Name</th>
                                    <th class="four-cols">PO or Prod. No.</th>
                                    <th class="four-cols">Sales Order No.</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="four-cols">@(Model.NcrQaProcessApplicable == true ? "Supplier or Rec-Insp" : "WIP (Production Order)")</td>
                                    <td class="four-cols">@Model.Supplier.SupplierName</td>
                                    <td class="four-cols">@Model.NcrQaOrderNumber</td>
                                    <td class="four-cols">@Model.NcrQaSalesOrder</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="card-body pb-0 pt-0">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="two-cols-1">Item Marked NonConforming</th>
                                    <th class="two-cols">Engineer Disposition Required?</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="two-cols-1">@(Model.NcrQaItemMarNonConforming == true ? "Yes" : "No")</td>
                                    <td class="two-cols">@(Model.NcrQaEngDispositionRequired == true ? "Yes" : "No")</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            Item Information
                        </div>
                        <div class="card-body pb-0 pt-0">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="four-cols">SAP No.</th>
                                        <th class="four-cols">Description</th>
                                        <th class="four-cols">Quantity Received</th>
                                        <th class="four-cols">Quantity Defective</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="four-cols">@Model.Item.ItemNumber</td>
                                        <td class="four-cols">@Model.Item.ItemName</td>
                                        <td class="four-cols">@Model.NcrQaQuanReceived</td>
                                        <td class="four-cols">@Model.NcrQaQuanDefective</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            Defect Information
                        </div>
                        <div class="card-body pb-0 pt-0">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="two-cols-1">Name</th>
                                        <th class="two-cols">Description of Defect</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="two-cols-1">@Model.Defect.DefectName</td>
                                        <td class="two-cols">@Model.NcrQaDescriptionOfDefect</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body pb-0">
                        <table class="table m-0">
                            <thead class="custom-light-bg">
                                <tr>
                                    <th class="three-cols">Quality Representative</th>
                                    <th class="three-cols">Creation Date</th>
                                    <th class="three-cols">Last Updated</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                        <td class="three-cols">@(Model.NcrQaUserId == "1" ? "Rachel May" : ViewBag.UserFirstName + " " + ViewBag.UserLastName)</td>
                                    <td class="three-cols">@Model.NcrQacreationDate.ToString("yyyy-MM-dd")</td>
                                    <td class="three-cols">
                                        @{
                                            if (Model.UpdatedOn.HasValue)
                                            {
                                                DateTime localUpdatedOn = TimeZoneInfo.ConvertTimeFromUtc(Model.UpdatedOn.Value, TimeZoneInfo.Local);
                                                @localUpdatedOn.ToString("yyyy-MM-dd HH:mm:ss")
                                            }
                                            else
                                            {
                                                @("Not available")
                                            }
                                        }
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                @{
                    bool hasImages = Model.ItemDefectPhotos != null && Model.ItemDefectPhotos.Any(p => p.ItemDefectPhotoContent != null);
                    bool hasVideos = Model.NcrQaDefectVideo != null;
                }
                @if (hasImages || hasVideos)
                {
                    <button class="btn custom-secondary-bg icon-drop text-start" type="button" data-bs-toggle="collapse" data-bs-target="#additionalInfoQa" aria-expanded="false" aria-controls="additionalInfo">
                        Additional Information <i class="bi bi-chevron-down"></i>
                    </button>
                    <div class="collapse" id="additionalInfoQa">
                        @if (hasImages)
                        {
                            <div class="card-header">
                                Images
                            </div>
                            <div class="card-body pb-0">
                                <div class="row justify-content-center">
                                    @{
                                        if (Model.ItemDefectPhotos != null && Model.ItemDefectPhotos.Any())
                                        {
                                            foreach (var photo in Model.ItemDefectPhotos)
                                            {
                                                if (photo.ItemDefectPhotoContent != null)
                                                {
                                                    string imageBase64 = Convert.ToBase64String(photo.ItemDefectPhotoContent);
                                                    string imageSrc = string.Format("data:" + photo.ItemDefectPhotoMimeType + ";base64,{0}", imageBase64);

                                                    <div class="text-center pb-3 col-6">
                                                        <img src="@imageSrc" alt="Defect Photo of @Model.Defect.DefectName" title="Defect Photo of @Model.Defect.DefectName" 
                                                            class="img-fluid rounded zoomable-image" onclick="openPopupImage('@imageSrc')" />
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        }
                        @if (hasVideos)
                        {
                            <div class="card-header">
                                Videos
                            </div>
                            <div class="card-body">
                                @if (Model.NcrQaDefectVideo != null)
                                {
                                    @foreach (var videoUrl in Model.NcrQaDefectVideo.Split(','))
                                    {
                                        <a href="@videoUrl" target="_blank">Video Link</a>
                                        <br />
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
<div id="popupImageContainer">
    <span class="close" onclick="closePopupImage()">&times;</span>
    <img id="popupImage" class="popup-img zoomable-image">
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/0.3.1/medium-zoom.min.js"></script>
<script>
    let zoomInstance; // Variable to hold the zoom instance
    let clickCount = 0; // Counter to track the number of clicks

    function openPopupImage(imageSrc) {
        document.getElementById("popupImage").src = imageSrc;
        document.getElementById("popupImageContainer").style.display = "block";
        document.body.style.overflow = "hidden"; // Disable scrolling of the webpage
        initializeZoom(); // Initialize zoom on image
    }

    function closePopupImage() {
        document.getElementById("popupImageContainer").style.display = "none";
        document.body.style.overflow = ""; // Enable scrolling of the webpage when popup is closed
        destroyZoom(); // Destroy zoom instance when closing popup
        clickCount = 0; // Reset click count when closing popup
    }

    function initializeZoom() {
        const zoomableImage = document.getElementById("popupImage");
        zoomInstance = mediumZoom(zoomableImage);
        zoomableImage.addEventListener('click', toggleZoom);
    }

    function destroyZoom() {
        if (zoomInstance) {
            zoomInstance.detach(); // Detach zoom instance from the image
            const zoomableImage = document.getElementById("popupImage");
            zoomableImage.removeEventListener('click', toggleZoom);
        }
    }

    function toggleZoom() {
        clickCount++; // Increment click count
        if (clickCount === 2) {
            zoomInstance.zoom(3); // Zoom to 3x when clicked the second time
            clickCount = 0; // Reset click count after zooming
        } else {
            if (zoomInstance && zoomInstance.isZoomedIn()) {
                zoomInstance.hide(); // If zoomed in, hide the zoom
            } else {
                zoomInstance.show(); // If zoomed out or not zoomed, show the zoom
            }
        }
    }
</script>
